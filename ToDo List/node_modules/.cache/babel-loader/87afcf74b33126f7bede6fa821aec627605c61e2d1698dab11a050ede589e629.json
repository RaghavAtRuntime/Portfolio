{"ast":null,"code":"const queryOptionsDefaults = {\n  formatted: false,\n  lang: \"en-US\",\n  region: \"US\"\n};\nexport default function options(symbol, queryOptionsOverrides, moduleOptions) {\n  return this._moduleExec({\n    moduleName: \"options\",\n    query: {\n      assertSymbol: symbol,\n      url: \"https://${YF_QUERY_HOST}/v7/finance/options/\" + symbol,\n      needsCrumb: true,\n      schemaKey: \"#/definitions/OptionsOptions\",\n      defaults: queryOptionsDefaults,\n      overrides: queryOptionsOverrides,\n      transformWith(queryOptions) {\n        const date = queryOptions.date;\n        if (date) {\n          // yfDate will convert valid number/string to Date.\n          if (date instanceof Date) {\n            // now we convert back to unix epoch in seconds for query\n            queryOptions.date = Math.floor(date.getTime() / 1000);\n          } else {\n            // yfDate didn't recognize it as a date.\n            throw new Error(\"Unsupported date type: \" + date);\n          }\n        }\n        return queryOptions;\n      }\n    },\n    result: {\n      schemaKey: \"#/definitions/OptionsResult\",\n      transformWith(result) {\n        if (!result.optionChain) throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n        return result.optionChain.result[0];\n      }\n    },\n    moduleOptions\n  });\n}","map":{"version":3,"names":["queryOptionsDefaults","formatted","lang","region","options","symbol","queryOptionsOverrides","moduleOptions","_moduleExec","moduleName","query","assertSymbol","url","needsCrumb","schemaKey","defaults","overrides","transformWith","queryOptions","date","Date","Math","floor","getTime","Error","result","optionChain","JSON","stringify"],"sources":["/Users/raghavsinha/sandbox/node_modules/yahoo-finance2/dist/esm/src/modules/options.js"],"sourcesContent":["const queryOptionsDefaults = {\n    formatted: false,\n    lang: \"en-US\",\n    region: \"US\",\n};\nexport default function options(symbol, queryOptionsOverrides, moduleOptions) {\n    return this._moduleExec({\n        moduleName: \"options\",\n        query: {\n            assertSymbol: symbol,\n            url: \"https://${YF_QUERY_HOST}/v7/finance/options/\" + symbol,\n            needsCrumb: true,\n            schemaKey: \"#/definitions/OptionsOptions\",\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n            transformWith(queryOptions) {\n                const date = queryOptions.date;\n                if (date) {\n                    // yfDate will convert valid number/string to Date.\n                    if (date instanceof Date) {\n                        // now we convert back to unix epoch in seconds for query\n                        queryOptions.date = Math.floor(date.getTime() / 1000);\n                    }\n                    else {\n                        // yfDate didn't recognize it as a date.\n                        throw new Error(\"Unsupported date type: \" + date);\n                    }\n                }\n                return queryOptions;\n            },\n        },\n        result: {\n            schemaKey: \"#/definitions/OptionsResult\",\n            transformWith(result) {\n                if (!result.optionChain)\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n                return result.optionChain.result[0];\n            },\n        },\n        moduleOptions,\n    });\n}\n"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG;EACzBC,SAAS,EAAE,KAAK;EAChBC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE;AACZ,CAAC;AACD,eAAe,SAASC,OAAOA,CAACC,MAAM,EAAEC,qBAAqB,EAAEC,aAAa,EAAE;EAC1E,OAAO,IAAI,CAACC,WAAW,CAAC;IACpBC,UAAU,EAAE,SAAS;IACrBC,KAAK,EAAE;MACHC,YAAY,EAAEN,MAAM;MACpBO,GAAG,EAAE,8CAA8C,GAAGP,MAAM;MAC5DQ,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,8BAA8B;MACzCC,QAAQ,EAAEf,oBAAoB;MAC9BgB,SAAS,EAAEV,qBAAqB;MAChCW,aAAaA,CAACC,YAAY,EAAE;QACxB,MAAMC,IAAI,GAAGD,YAAY,CAACC,IAAI;QAC9B,IAAIA,IAAI,EAAE;UACN;UACA,IAAIA,IAAI,YAAYC,IAAI,EAAE;YACtB;YACAF,YAAY,CAACC,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;UACzD,CAAC,MACI;YACD;YACA,MAAM,IAAIC,KAAK,CAAC,yBAAyB,GAAGL,IAAI,CAAC;UACrD;QACJ;QACA,OAAOD,YAAY;MACvB;IACJ,CAAC;IACDO,MAAM,EAAE;MACJX,SAAS,EAAE,6BAA6B;MACxCG,aAAaA,CAACQ,MAAM,EAAE;QAClB,IAAI,CAACA,MAAM,CAACC,WAAW,EACnB,MAAM,IAAIF,KAAK,CAAC,qBAAqB,GAAGG,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC,CAAC;QACnE,OAAOA,MAAM,CAACC,WAAW,CAACD,MAAM,CAAC,CAAC,CAAC;MACvC;IACJ,CAAC;IACDlB;EACJ,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}