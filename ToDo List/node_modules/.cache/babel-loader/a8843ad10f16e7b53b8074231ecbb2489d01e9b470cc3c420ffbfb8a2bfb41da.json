{"ast":null,"code":"const queryOptionsDefaults = {};\nexport default async function quote(query, queryOptionsOverrides, moduleOptions) {\n  const symbols = typeof query === \"string\" ? query : query.join(\",\");\n  const returnAs = queryOptionsOverrides && queryOptionsOverrides.return;\n  const results = await this._moduleExec({\n    moduleName: \"quote\",\n    query: {\n      url: \"https://${YF_QUERY_HOST}/v7/finance/quote\",\n      needsCrumb: true,\n      schemaKey: \"#/definitions/QuoteOptions\",\n      defaults: queryOptionsDefaults,\n      runtime: {\n        symbols\n      },\n      overrides: queryOptionsOverrides,\n      transformWith(queryOptions) {\n        // Options validation ensures this is a string[]\n        if (queryOptions.fields) queryOptions.fields.join(\",\");\n        // Don't pass this on to Yahoo\n        delete queryOptions.return;\n        return queryOptions;\n      }\n    },\n    result: {\n      schemaKey: \"#/definitions/QuoteResponseArray\",\n      transformWith(rawResult) {\n        var _a;\n        let results = (_a = rawResult === null || rawResult === void 0 ? void 0 : rawResult.quoteResponse) === null || _a === void 0 ? void 0 : _a.result;\n        if (!results || !Array.isArray(results)) throw new Error(\"Unexpected result: \" + JSON.stringify(rawResult));\n        // Filter out quoteType==='NONE'\n        // So that delisted stocks will be undefined just like symbol-not-found\n        results = results.filter(quote => (quote === null || quote === void 0 ? void 0 : quote.quoteType) !== \"NONE\");\n        return results;\n      }\n    },\n    moduleOptions\n  });\n  if (returnAs) {\n    switch (returnAs) {\n      case \"array\":\n        return results;\n      case \"object\":\n        const object = {};\n        for (let result of results) object[result.symbol] = result;\n        return object;\n      // TODO: type\n      case \"map\":\n        const map = new Map();\n        for (let result of results) map.set(result.symbol, result);\n        return map;\n      // TODO: type\n    }\n  } else {\n    // By default, match the query input shape (string or string[]).\n    return typeof query === \"string\" ? results[0] : results;\n  }\n}","map":{"version":3,"names":["queryOptionsDefaults","quote","query","queryOptionsOverrides","moduleOptions","symbols","join","returnAs","return","results","_moduleExec","moduleName","url","needsCrumb","schemaKey","defaults","runtime","overrides","transformWith","queryOptions","fields","result","rawResult","_a","quoteResponse","Array","isArray","Error","JSON","stringify","filter","quoteType","object","symbol","map","Map","set"],"sources":["/Users/raghavsinha/sandbox/node_modules/yahoo-finance2/dist/esm/src/modules/quote.js"],"sourcesContent":["const queryOptionsDefaults = {};\nexport default async function quote(query, queryOptionsOverrides, moduleOptions) {\n    const symbols = typeof query === \"string\" ? query : query.join(\",\");\n    const returnAs = queryOptionsOverrides && queryOptionsOverrides.return;\n    const results = await this._moduleExec({\n        moduleName: \"quote\",\n        query: {\n            url: \"https://${YF_QUERY_HOST}/v7/finance/quote\",\n            needsCrumb: true,\n            schemaKey: \"#/definitions/QuoteOptions\",\n            defaults: queryOptionsDefaults,\n            runtime: { symbols },\n            overrides: queryOptionsOverrides,\n            transformWith(queryOptions) {\n                // Options validation ensures this is a string[]\n                if (queryOptions.fields)\n                    queryOptions.fields.join(\",\");\n                // Don't pass this on to Yahoo\n                delete queryOptions.return;\n                return queryOptions;\n            },\n        },\n        result: {\n            schemaKey: \"#/definitions/QuoteResponseArray\",\n            transformWith(rawResult) {\n                var _a;\n                let results = (_a = rawResult === null || rawResult === void 0 ? void 0 : rawResult.quoteResponse) === null || _a === void 0 ? void 0 : _a.result;\n                if (!results || !Array.isArray(results))\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(rawResult));\n                // Filter out quoteType==='NONE'\n                // So that delisted stocks will be undefined just like symbol-not-found\n                results = results.filter((quote) => (quote === null || quote === void 0 ? void 0 : quote.quoteType) !== \"NONE\");\n                return results;\n            },\n        },\n        moduleOptions,\n    });\n    if (returnAs) {\n        switch (returnAs) {\n            case \"array\":\n                return results;\n            case \"object\":\n                const object = {};\n                for (let result of results)\n                    object[result.symbol] = result;\n                return object; // TODO: type\n            case \"map\":\n                const map = new Map();\n                for (let result of results)\n                    map.set(result.symbol, result);\n                return map; // TODO: type\n        }\n    }\n    else {\n        // By default, match the query input shape (string or string[]).\n        return typeof query === \"string\"\n            ? results[0]\n            : results;\n    }\n}\n"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,CAAC,CAAC;AAC/B,eAAe,eAAeC,KAAKA,CAACC,KAAK,EAAEC,qBAAqB,EAAEC,aAAa,EAAE;EAC7E,MAAMC,OAAO,GAAG,OAAOH,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGA,KAAK,CAACI,IAAI,CAAC,GAAG,CAAC;EACnE,MAAMC,QAAQ,GAAGJ,qBAAqB,IAAIA,qBAAqB,CAACK,MAAM;EACtE,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC;IACnCC,UAAU,EAAE,OAAO;IACnBT,KAAK,EAAE;MACHU,GAAG,EAAE,2CAA2C;MAChDC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,4BAA4B;MACvCC,QAAQ,EAAEf,oBAAoB;MAC9BgB,OAAO,EAAE;QAAEX;MAAQ,CAAC;MACpBY,SAAS,EAAEd,qBAAqB;MAChCe,aAAaA,CAACC,YAAY,EAAE;QACxB;QACA,IAAIA,YAAY,CAACC,MAAM,EACnBD,YAAY,CAACC,MAAM,CAACd,IAAI,CAAC,GAAG,CAAC;QACjC;QACA,OAAOa,YAAY,CAACX,MAAM;QAC1B,OAAOW,YAAY;MACvB;IACJ,CAAC;IACDE,MAAM,EAAE;MACJP,SAAS,EAAE,kCAAkC;MAC7CI,aAAaA,CAACI,SAAS,EAAE;QACrB,IAAIC,EAAE;QACN,IAAId,OAAO,GAAG,CAACc,EAAE,GAAGD,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACE,aAAa,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACF,MAAM;QACjJ,IAAI,CAACZ,OAAO,IAAI,CAACgB,KAAK,CAACC,OAAO,CAACjB,OAAO,CAAC,EACnC,MAAM,IAAIkB,KAAK,CAAC,qBAAqB,GAAGC,IAAI,CAACC,SAAS,CAACP,SAAS,CAAC,CAAC;QACtE;QACA;QACAb,OAAO,GAAGA,OAAO,CAACqB,MAAM,CAAE7B,KAAK,IAAK,CAACA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAAC8B,SAAS,MAAM,MAAM,CAAC;QAC/G,OAAOtB,OAAO;MAClB;IACJ,CAAC;IACDL;EACJ,CAAC,CAAC;EACF,IAAIG,QAAQ,EAAE;IACV,QAAQA,QAAQ;MACZ,KAAK,OAAO;QACR,OAAOE,OAAO;MAClB,KAAK,QAAQ;QACT,MAAMuB,MAAM,GAAG,CAAC,CAAC;QACjB,KAAK,IAAIX,MAAM,IAAIZ,OAAO,EACtBuB,MAAM,CAACX,MAAM,CAACY,MAAM,CAAC,GAAGZ,MAAM;QAClC,OAAOW,MAAM;MAAE;MACnB,KAAK,KAAK;QACN,MAAME,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;QACrB,KAAK,IAAId,MAAM,IAAIZ,OAAO,EACtByB,GAAG,CAACE,GAAG,CAACf,MAAM,CAACY,MAAM,EAAEZ,MAAM,CAAC;QAClC,OAAOa,GAAG;MAAE;IACpB;EACJ,CAAC,MACI;IACD;IACA,OAAO,OAAOhC,KAAK,KAAK,QAAQ,GAC1BO,OAAO,CAAC,CAAC,CAAC,GACVA,OAAO;EACjB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}