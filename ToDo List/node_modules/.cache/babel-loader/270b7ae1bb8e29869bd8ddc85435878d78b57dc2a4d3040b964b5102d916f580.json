{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsinha/sandbox/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const addTask = () => {\n    if (newTask.trim() !== \"\") {\n      if (!checkDuplicate(newTask)) {\n        setTasks([...tasks, newTask]);\n        setNewTask(\"\");\n        setError(\"\");\n      } else {\n        setError(\"Task already exists!\");\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n      }\n    }\n  };\n  const removeTask = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      addTask();\n    }\n  };\n  const checkDuplicate = task => {\n    return tasks.includes(task);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AppContainer\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Add a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"TaskButton\",\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"TaskList\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"TaskItem\",\n        children: [task, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"TaskButton\",\n          onClick: () => removeTask(index),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fDIvzzBX+1UPCZrGp2tXCH4DEX8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","error","setError","addTask","trim","checkDuplicate","setTimeout","removeTask","index","updatedTasks","splice","handleKeyPress","e","key","task","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyPress","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["/Users/raghavsinha/sandbox/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // Import the CSS file\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const addTask = () => {\n    if (newTask.trim() !== \"\") {\n      if (!checkDuplicate(newTask)) {\n        setTasks([...tasks, newTask]);\n        setNewTask(\"\");\n        setError(\"\");\n      } else {\n        setError(\"Task already exists!\");\n        setTimeout(() => {\n          setError(\"\");\n        }, 2000);\n      }\n    }\n  };\n\n  const removeTask = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  };\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      addTask();\n    }\n  };\n  const checkDuplicate = (task) => {\n    return tasks.includes(task);\n  };\n\n  return (\n    <div className=\"AppContainer\">\n      {\" \"}\n      {/* Update class names */}\n      <h1>React To-Do List</h1>\n      {error && <div className=\"Error\">{error}</div>}\n      <div className=\"InputContainer\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Add a new task\"\n        />\n        <button className=\"TaskButton\" onClick={addTask}>\n          Add\n        </button>\n      </div>\n      <ul className=\"TaskList\">\n        {tasks.map((task, index) => (\n          <li className=\"TaskItem\" key={index}>\n            {task}\n            <button className=\"TaskButton\" onClick={() => removeTask(index)}>\n              Done\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}