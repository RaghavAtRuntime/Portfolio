{"ast":null,"code":"import validateAndCoerceTypes from \"./validateAndCoerceTypes.js\";\nimport { ExtendedCookieJar } from \"./cookieJar.js\";\nexport default function setGlobalConfig(_config) {\n  // Instances (e.g. cookieJar) don't validate well :)\n  const {\n    cookieJar,\n    logger,\n    ...config\n  } = _config;\n  validateAndCoerceTypes({\n    object: config,\n    source: \"setGlobalConfig\",\n    type: \"options\",\n    options: this._opts.validation,\n    schemaKey: \"#/definitions/YahooFinanceOptions\"\n  });\n  mergeObjects(this._opts, config);\n  if (cookieJar) {\n    if (!(cookieJar instanceof ExtendedCookieJar)) throw new Error(\"cookieJar must be an instance of ExtendedCookieJar\");\n    this._opts.cookieJar = cookieJar;\n  }\n  if (logger) {\n    if (typeof logger.info !== \"function\") throw new Error(\"logger.info must be a function\");\n    if (typeof logger.warn !== \"function\") throw new Error(\"logger.warn must be a function\");\n    if (typeof logger.error !== \"function\") throw new Error(\"logger.error must be a function\");\n    if (typeof logger.debug !== \"function\") throw new Error(\"logger.debug must be a function\");\n    this._opts.logger = logger;\n  }\n}\nfunction mergeObjects(original, objToMerge) {\n  const ownKeys = Reflect.ownKeys(objToMerge);\n  for (const key of ownKeys) {\n    if (typeof objToMerge[key] === \"object\") {\n      mergeObjects(original[key], objToMerge[key]);\n    } else {\n      original[key] = objToMerge[key];\n    }\n  }\n}","map":{"version":3,"names":["validateAndCoerceTypes","ExtendedCookieJar","setGlobalConfig","_config","cookieJar","logger","config","object","source","type","options","_opts","validation","schemaKey","mergeObjects","Error","info","warn","error","debug","original","objToMerge","ownKeys","Reflect","key"],"sources":["/Users/raghavsinha/sandbox/node_modules/yahoo-finance2/dist/esm/src/lib/setGlobalConfig.js"],"sourcesContent":["import validateAndCoerceTypes from \"./validateAndCoerceTypes.js\";\nimport { ExtendedCookieJar } from \"./cookieJar.js\";\nexport default function setGlobalConfig(_config) {\n    // Instances (e.g. cookieJar) don't validate well :)\n    const { cookieJar, logger, ...config } = _config;\n    validateAndCoerceTypes({\n        object: config,\n        source: \"setGlobalConfig\",\n        type: \"options\",\n        options: this._opts.validation,\n        schemaKey: \"#/definitions/YahooFinanceOptions\",\n    });\n    mergeObjects(this._opts, config);\n    if (cookieJar) {\n        if (!(cookieJar instanceof ExtendedCookieJar))\n            throw new Error(\"cookieJar must be an instance of ExtendedCookieJar\");\n        this._opts.cookieJar = cookieJar;\n    }\n    if (logger) {\n        if (typeof logger.info !== \"function\")\n            throw new Error(\"logger.info must be a function\");\n        if (typeof logger.warn !== \"function\")\n            throw new Error(\"logger.warn must be a function\");\n        if (typeof logger.error !== \"function\")\n            throw new Error(\"logger.error must be a function\");\n        if (typeof logger.debug !== \"function\")\n            throw new Error(\"logger.debug must be a function\");\n        this._opts.logger = logger;\n    }\n}\nfunction mergeObjects(original, objToMerge) {\n    const ownKeys = Reflect.ownKeys(objToMerge);\n    for (const key of ownKeys) {\n        if (typeof objToMerge[key] === \"object\") {\n            mergeObjects(original[key], objToMerge[key]);\n        }\n        else {\n            original[key] = objToMerge[key];\n        }\n    }\n}\n"],"mappings":"AAAA,OAAOA,sBAAsB,MAAM,6BAA6B;AAChE,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,eAAe,SAASC,eAAeA,CAACC,OAAO,EAAE;EAC7C;EACA,MAAM;IAAEC,SAAS;IAAEC,MAAM;IAAE,GAAGC;EAAO,CAAC,GAAGH,OAAO;EAChDH,sBAAsB,CAAC;IACnBO,MAAM,EAAED,MAAM;IACdE,MAAM,EAAE,iBAAiB;IACzBC,IAAI,EAAE,SAAS;IACfC,OAAO,EAAE,IAAI,CAACC,KAAK,CAACC,UAAU;IAC9BC,SAAS,EAAE;EACf,CAAC,CAAC;EACFC,YAAY,CAAC,IAAI,CAACH,KAAK,EAAEL,MAAM,CAAC;EAChC,IAAIF,SAAS,EAAE;IACX,IAAI,EAAEA,SAAS,YAAYH,iBAAiB,CAAC,EACzC,MAAM,IAAIc,KAAK,CAAC,oDAAoD,CAAC;IACzE,IAAI,CAACJ,KAAK,CAACP,SAAS,GAAGA,SAAS;EACpC;EACA,IAAIC,MAAM,EAAE;IACR,IAAI,OAAOA,MAAM,CAACW,IAAI,KAAK,UAAU,EACjC,MAAM,IAAID,KAAK,CAAC,gCAAgC,CAAC;IACrD,IAAI,OAAOV,MAAM,CAACY,IAAI,KAAK,UAAU,EACjC,MAAM,IAAIF,KAAK,CAAC,gCAAgC,CAAC;IACrD,IAAI,OAAOV,MAAM,CAACa,KAAK,KAAK,UAAU,EAClC,MAAM,IAAIH,KAAK,CAAC,iCAAiC,CAAC;IACtD,IAAI,OAAOV,MAAM,CAACc,KAAK,KAAK,UAAU,EAClC,MAAM,IAAIJ,KAAK,CAAC,iCAAiC,CAAC;IACtD,IAAI,CAACJ,KAAK,CAACN,MAAM,GAAGA,MAAM;EAC9B;AACJ;AACA,SAASS,YAAYA,CAACM,QAAQ,EAAEC,UAAU,EAAE;EACxC,MAAMC,OAAO,GAAGC,OAAO,CAACD,OAAO,CAACD,UAAU,CAAC;EAC3C,KAAK,MAAMG,GAAG,IAAIF,OAAO,EAAE;IACvB,IAAI,OAAOD,UAAU,CAACG,GAAG,CAAC,KAAK,QAAQ,EAAE;MACrCV,YAAY,CAACM,QAAQ,CAACI,GAAG,CAAC,EAAEH,UAAU,CAACG,GAAG,CAAC,CAAC;IAChD,CAAC,MACI;MACDJ,QAAQ,CAACI,GAAG,CAAC,GAAGH,UAAU,CAACG,GAAG,CAAC;IACnC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}