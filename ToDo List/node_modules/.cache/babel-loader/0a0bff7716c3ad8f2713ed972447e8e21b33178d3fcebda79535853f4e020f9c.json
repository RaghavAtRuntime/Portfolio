{"ast":null,"code":"export const quoteSummary_modules = [\"assetProfile\", \"balanceSheetHistory\", \"balanceSheetHistoryQuarterly\", \"calendarEvents\", \"cashflowStatementHistory\", \"cashflowStatementHistoryQuarterly\", \"defaultKeyStatistics\", \"earnings\", \"earningsHistory\", \"earningsTrend\", \"financialData\", \"fundOwnership\", \"fundPerformance\", \"fundProfile\", \"incomeStatementHistory\", \"incomeStatementHistoryQuarterly\", \"indexTrend\", \"industryTrend\", \"insiderHolders\", \"insiderTransactions\", \"institutionOwnership\", \"majorDirectHolders\", \"majorHoldersBreakdown\", \"netSharePurchaseActivity\", \"price\", \"quoteType\", \"recommendationTrend\", \"secFilings\", \"sectorTrend\", \"summaryDetail\", \"summaryProfile\", \"topHoldings\", \"upgradeDowngradeHistory\"];\nconst queryOptionsDefaults = {\n  formatted: false,\n  modules: [\"price\", \"summaryDetail\"]\n};\nexport default function quoteSummary(symbol, queryOptionsOverrides, moduleOptions) {\n  return this._moduleExec({\n    moduleName: \"quoteSummary\",\n    query: {\n      assertSymbol: symbol,\n      url: \"https://${YF_QUERY_HOST}/v10/finance/quoteSummary/\" + symbol,\n      needsCrumb: true,\n      schemaKey: \"#/definitions/QuoteSummaryOptions\",\n      defaults: queryOptionsDefaults,\n      overrides: queryOptionsOverrides,\n      transformWith(options) {\n        if (options.modules === \"all\") options.modules = quoteSummary_modules;\n        return options;\n      }\n    },\n    result: {\n      schemaKey: \"#/definitions/QuoteSummaryResult\",\n      transformWith(result) {\n        if (!result.quoteSummary) throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n        return result.quoteSummary.result[0];\n      }\n    },\n    moduleOptions\n  });\n}","map":{"version":3,"names":["quoteSummary_modules","queryOptionsDefaults","formatted","modules","quoteSummary","symbol","queryOptionsOverrides","moduleOptions","_moduleExec","moduleName","query","assertSymbol","url","needsCrumb","schemaKey","defaults","overrides","transformWith","options","result","Error","JSON","stringify"],"sources":["/Users/raghavsinha/sandbox/node_modules/yahoo-finance2/dist/esm/src/modules/quoteSummary.js"],"sourcesContent":["export const quoteSummary_modules = [\n    \"assetProfile\",\n    \"balanceSheetHistory\",\n    \"balanceSheetHistoryQuarterly\",\n    \"calendarEvents\",\n    \"cashflowStatementHistory\",\n    \"cashflowStatementHistoryQuarterly\",\n    \"defaultKeyStatistics\",\n    \"earnings\",\n    \"earningsHistory\",\n    \"earningsTrend\",\n    \"financialData\",\n    \"fundOwnership\",\n    \"fundPerformance\",\n    \"fundProfile\",\n    \"incomeStatementHistory\",\n    \"incomeStatementHistoryQuarterly\",\n    \"indexTrend\",\n    \"industryTrend\",\n    \"insiderHolders\",\n    \"insiderTransactions\",\n    \"institutionOwnership\",\n    \"majorDirectHolders\",\n    \"majorHoldersBreakdown\",\n    \"netSharePurchaseActivity\",\n    \"price\",\n    \"quoteType\",\n    \"recommendationTrend\",\n    \"secFilings\",\n    \"sectorTrend\",\n    \"summaryDetail\",\n    \"summaryProfile\",\n    \"topHoldings\",\n    \"upgradeDowngradeHistory\",\n];\nconst queryOptionsDefaults = {\n    formatted: false,\n    modules: [\"price\", \"summaryDetail\"],\n};\nexport default function quoteSummary(symbol, queryOptionsOverrides, moduleOptions) {\n    return this._moduleExec({\n        moduleName: \"quoteSummary\",\n        query: {\n            assertSymbol: symbol,\n            url: \"https://${YF_QUERY_HOST}/v10/finance/quoteSummary/\" + symbol,\n            needsCrumb: true,\n            schemaKey: \"#/definitions/QuoteSummaryOptions\",\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n            transformWith(options) {\n                if (options.modules === \"all\")\n                    options.modules = quoteSummary_modules;\n                return options;\n            },\n        },\n        result: {\n            schemaKey: \"#/definitions/QuoteSummaryResult\",\n            transformWith(result) {\n                if (!result.quoteSummary)\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n                return result.quoteSummary.result[0];\n            },\n        },\n        moduleOptions,\n    });\n}\n"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,CAChC,cAAc,EACd,qBAAqB,EACrB,8BAA8B,EAC9B,gBAAgB,EAChB,0BAA0B,EAC1B,mCAAmC,EACnC,sBAAsB,EACtB,UAAU,EACV,iBAAiB,EACjB,eAAe,EACf,eAAe,EACf,eAAe,EACf,iBAAiB,EACjB,aAAa,EACb,wBAAwB,EACxB,iCAAiC,EACjC,YAAY,EACZ,eAAe,EACf,gBAAgB,EAChB,qBAAqB,EACrB,sBAAsB,EACtB,oBAAoB,EACpB,uBAAuB,EACvB,0BAA0B,EAC1B,OAAO,EACP,WAAW,EACX,qBAAqB,EACrB,YAAY,EACZ,aAAa,EACb,eAAe,EACf,gBAAgB,EAChB,aAAa,EACb,yBAAyB,CAC5B;AACD,MAAMC,oBAAoB,GAAG;EACzBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,CAAC,OAAO,EAAE,eAAe;AACtC,CAAC;AACD,eAAe,SAASC,YAAYA,CAACC,MAAM,EAAEC,qBAAqB,EAAEC,aAAa,EAAE;EAC/E,OAAO,IAAI,CAACC,WAAW,CAAC;IACpBC,UAAU,EAAE,cAAc;IAC1BC,KAAK,EAAE;MACHC,YAAY,EAAEN,MAAM;MACpBO,GAAG,EAAE,oDAAoD,GAAGP,MAAM;MAClEQ,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,mCAAmC;MAC9CC,QAAQ,EAAEd,oBAAoB;MAC9Be,SAAS,EAAEV,qBAAqB;MAChCW,aAAaA,CAACC,OAAO,EAAE;QACnB,IAAIA,OAAO,CAACf,OAAO,KAAK,KAAK,EACzBe,OAAO,CAACf,OAAO,GAAGH,oBAAoB;QAC1C,OAAOkB,OAAO;MAClB;IACJ,CAAC;IACDC,MAAM,EAAE;MACJL,SAAS,EAAE,kCAAkC;MAC7CG,aAAaA,CAACE,MAAM,EAAE;QAClB,IAAI,CAACA,MAAM,CAACf,YAAY,EACpB,MAAM,IAAIgB,KAAK,CAAC,qBAAqB,GAAGC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC,CAAC;QACnE,OAAOA,MAAM,CAACf,YAAY,CAACe,MAAM,CAAC,CAAC,CAAC;MACxC;IACJ,CAAC;IACDZ;EACJ,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}